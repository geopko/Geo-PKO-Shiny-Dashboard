library(tidyverse)
library(readr)
library(ggthemes)
library(knitr)
library(maps)
library(dplyr)
setwd ("C:/Users/tanus/Dropbox/geopko")
GeoPKO <- read_csv("Geo_PKO_NH_almost_final_2020_08_04.csv")
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(ggrepel)
library(viridis)
library(ggpubr)
options(shiny.usecairo=TRUE)
ui <- fluidPage(
navbarPage("Exploring GeoPKO",
tabPanel ("Using This Data",tags$div(
tags$h3("Geocoded UN Peacekeeping Operations Dataset"),tags$br(),
"The Geo-PKO dataset provides data on UN peacekeeping deployments.", tags$br(),
"It offers information on key attributes of peacekeeping deployments at the local level, including location, size, troop type, headquarters, troop-contributing countries and other variables.",tags$br(),tags$br(),
tags$b("When using the data, please cite:"), tags$br(),"Cil, D., Fjelde, H., Hultman, L., & Nilsson, D. (2020). Mapping blue helmets: Introducing the Geocoded Peacekeeping Operations (Geo-PKO) dataset. Journal of Peace Research, 57(2), 360â370. ", tags$br(),
tags$br(),tags$br(),tags$h4("Download the Data"),
tags$b("Previous version: "),tags$br(),
tags$a(href="https://www.pcr.uu.se/digitalAssets/818/c_818704-l_1-k_geo-pko-codebook_v1.2.pdf", "GeoPKO 1.2 codebook"),tags$br(),
tags$a(href="https://www.pcr.uu.se/digitalAssets/818/c_818704-l_1-k_geo_pko_v.1.2.csv", "GeoPKO 1.2 csv"),tags$br(),
tags$a(href="https://www.pcr.uu.se/digitalAssets/818/c_818704-l_1-k_geo_pko_v.1.2.rds", "GeoPKO 1.2 rds"),tags$br(),
tags$br(),tags$br(),tags$h4("Further information"),
tags$b("Dataset Homepage: "), tags$a(href="https://www.pcr.uu.se/data/geo-pko/", "The Geocoded Peacekeeping Operations Dataset"),tags$br(),
tags$b("An R guide to using the GeoPKO dataset"), tags$a(href="https://github.com/nytimes/covid-19-data", "GitHub"),tags$br(),
tags$b("UN deployment Maps"), tags$a(href="https://digitallibrary.un.org/", "UN Digital Library"),tags$br(),
tags$b("Introductionary article: "),  tags$a(href="https://journals.sagepub.com/doi/10.1177/0022343319871978", "Mapping Blue Helmets"),"By Cil, D., Fjelde, H., Hultman, L., & Nilsson, D. (2020)",tags$br(),
tags$b("Studies using this data: "),tags$br(),
tags$a(href="https://www.cambridge.org/core/journals/international-organization/article/protection-through-presence-un-peacekeeping-and-the-costs-of-targeting-civilians/050CE5EC7C4D8049FD3973241EC0F97D", "Protection through Presence: UN Peacekeeping and the Costs of Targeting Civilians"),"By Fjelde, H., Hultman, L. & Nilsson, D. (2019)",tags$br(),
tags$a(href="https://www.tandfonline.com/doi/full/10.1080/13533312.2019.1676642?scroll=top&needAccess=true", "UN Peacekeeping and Forced Displacement in South Sudan"),"By Sundberg, R. (2020)",
tags$br(),tags$br(),tags$h4("Contributers Shiny App"),
"Nguyen Ha, Research Assistant at the department of Peace and Conflict Research, Uppsala University",tags$br(),
"Tanushree Rao, Intern at the department of Peace and Conflict Research, Uppsala University",tags$br(),
"Lou van Roozendaal, Intern at the department of Peace and Conflict Research, Uppsala University",
tags$br(),tags$br(),tags$h4("Code"),
"Code is available on ",tags$a(href="https://github.com/hatnguyen267/GeoPKO-Shiny", "GitHub.")
)))
)
if(!require(magrittr)) install.packages("magrittr", repos = "http://cran.us.r-project.org")
if(!require(rvest)) install.packages("rvest", repos = "http://cran.us.r-project.org")
if(!require(readxl)) install.packages("readxl", repos = "http://cran.us.r-project.org")
if(!require(dplyr)) install.packages("dplyr", repos = "http://cran.us.r-project.org")
if(!require(readr)) install.packages("maps", repos = "http://cran.us.r-project.org")
if(!require(ggplot2)) install.packages("ggplot2", repos = "http://cran.us.r-project.org")
if(!require(reshape2)) install.packages("reshape2", repos = "http://cran.us.r-project.org")
if(!require(RColorBrewer)) install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")
if(!require(leaflet)) install.packages("leaflet", repos = "http://cran.us.r-project.org")
#if(!require(plotly)) install.packages("plotly", repos = "http://cran.us.r-project.org")
if(!require(geojsonio)) install.packages("geojsonio", repos = "http://cran.us.r-project.org")
if(!require(shiny)) install.packages("shiny", repos = "http://cran.us.r-project.org")
if(!require(shinyWidgets)) install.packages("shinyWidgets", repos = "http://cran.us.r-project.org")
if(!require(shinydashboard)) install.packages("shinydashboard", repos = "http://cran.us.r-project.org")
if(!require(shinythemes)) install.packages("shinythemes", repos = "http://cran.us.r-project.org")
if(!require(tidyr)) install.packages("shinythemes", repos = "http://cran.us.r-project.org")
if(!require(sf)) install.packages("shinythemes", repos = "http://cran.us.r-project.org")
if(!require(stringr)) install.packages("shinythemes", repos = "http://cran.us.r-project.org")
if(!require(lubridate)) install.packages("shinythemes", repos = "http://cran.us.r-project.org")
if(!require(kableExtra)) install.packages("shinythemes", repos = "http://cran.us.r-project.org")
if(!require(DT)) install.packages("shinythemes", repos = "http://cran.us.r-project.org")
if(!require(GADMTools)) install.packages("GADMTools")
if(!require(Cairo)) install.packages("Cairo")
if(!require(ggrepel)) install.packages("ggrepel")
if(!require(forcats)) install.packages("forcats")
if(!require(sp)) install.packages("sp")
if(!require(foreign)) install.packages("foreign", repos = "https://svn.r-project.org/")
ui <- fluidPage(
navbarPage("Exploring GeoPKO",
tabPanel ("Using This Data",tags$div(
tags$h3("Geocoded UN Peacekeeping Operations Dataset"),tags$br(),
"The Geo-PKO dataset provides data on UN peacekeeping deployments.", tags$br(),
"It offers information on key attributes of peacekeeping deployments at the local level, including location, size, troop type, headquarters, troop-contributing countries and other variables.",tags$br(),tags$br(),
tags$b("When using the data, please cite:"), tags$br(),"Cil, D., Fjelde, H., Hultman, L., & Nilsson, D. (2020). Mapping blue helmets: Introducing the Geocoded Peacekeeping Operations (Geo-PKO) dataset. Journal of Peace Research, 57(2), 360â370. ", tags$br(),
tags$br(),tags$br(),tags$h4("Download the Data"),
tags$b("Previous version: "),tags$br(),
tags$a(href="https://www.pcr.uu.se/digitalAssets/818/c_818704-l_1-k_geo-pko-codebook_v1.2.pdf", "GeoPKO 1.2 codebook"),tags$br(),
tags$a(href="https://www.pcr.uu.se/digitalAssets/818/c_818704-l_1-k_geo_pko_v.1.2.csv", "GeoPKO 1.2 csv"),tags$br(),
tags$a(href="https://www.pcr.uu.se/digitalAssets/818/c_818704-l_1-k_geo_pko_v.1.2.rds", "GeoPKO 1.2 rds"),tags$br(),
tags$br(),tags$br(),tags$h4("Further information"),
tags$b("Dataset Homepage: "), tags$a(href="https://www.pcr.uu.se/data/geo-pko/", "The Geocoded Peacekeeping Operations Dataset"),tags$br(),
tags$b("An R guide to using the GeoPKO dataset"), tags$a(href="https://github.com/nytimes/covid-19-data", "GitHub"),tags$br(),
tags$b("UN deployment Maps"), tags$a(href="https://digitallibrary.un.org/", "UN Digital Library"),tags$br(),
tags$b("Introductionary article: "),  tags$a(href="https://journals.sagepub.com/doi/10.1177/0022343319871978", "Mapping Blue Helmets"),"By Cil, D., Fjelde, H., Hultman, L., & Nilsson, D. (2020)",tags$br(),
tags$b("Studies using this data: "),tags$br(),
tags$a(href="https://www.cambridge.org/core/journals/international-organization/article/protection-through-presence-un-peacekeeping-and-the-costs-of-targeting-civilians/050CE5EC7C4D8049FD3973241EC0F97D", "Protection through Presence: UN Peacekeeping and the Costs of Targeting Civilians"),"By Fjelde, H., Hultman, L. & Nilsson, D. (2019)",tags$br(),
tags$a(href="https://www.tandfonline.com/doi/full/10.1080/13533312.2019.1676642?scroll=top&needAccess=true", "UN Peacekeeping and Forced Displacement in South Sudan"),"By Sundberg, R. (2020)",
tags$br(),tags$br(),tags$h4("Contributers Shiny App"),
"Nguyen Ha, Research Assistant at the department of Peace and Conflict Research, Uppsala University",tags$br(),
"Tanushree Rao, Intern at the department of Peace and Conflict Research, Uppsala University",tags$br(),
"Lou van Roozendaal, Intern at the department of Peace and Conflict Research, Uppsala University",
tags$br(),tags$br(),tags$h4("Code"),
"Code is available on ",tags$a(href="https://github.com/hatnguyen267/GeoPKO-Shiny", "GitHub.")
)))
)
server <- function(input, output, session){
}
shinyApp(ui=ui, server=server)
setwd ("C:/Users/tanus/Documents/R/Geo-PKO-Shiny-v2.0")
ui <- fluidPage(
navbarPage("Exploring Geo-PKO"),
tabPanel ("The Data",tags$div(
includeHTML("using-the-dataset.html"),
)))
server <- function(input, output, session){
}
shinyApp(ui=ui, server=server)
setwd("C:/Users/tanus/Documents/R/Geo-PKO-Shiny-v2.0")
options(shiny.usecairo=TRUE)
geopko <- readr::read_csv("geopko2.csv", col_types = cols(.default="c"),
locale=readr::locale(encoding="latin1"))
geopko <- readr::read_csv("geopko.csv", col_types = cols(.default="c"),
locale=readr::locale(encoding="latin1"))
iso <- read.csv("geopko_ccode2.csv")
geopko <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, Longitude, Latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
geopko <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, longitude, latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
---
title: "Data"
output: html_fragment
editor_options:
chunk_output_type: console"
---
---
title: "Data"
output: html_fragment
editor_options:
chunk_output_type: console"
---
#The Geocoded UN Peacekeeping Operations (Geo-PKO) Dataset
The Geo-PKO dataset provides data on UN peacekeeping deployments. It offers information on key attributes of peacekeeping deployments at the local level, including location, size, troop type, headquarters, troop-contributing countries and other variables.
Data has been coded in accordance with digitally published United Nations peacekeeping deployment maps, and some limitations may be found. Troop numbers are based on units identified in each map, in line with standard UN and NATO military unit sizes. The dataset is current as at August 2020, and will be updated in December 2020.
##Download the data
[Download v2.0 of the Geo-PKO dataset here.](http://)
**When using the data, please cite:**
Cil, D., Fjelde, H., Hultman, L., & Nilsson, D. (2020). Mapping blue helmets: Introducing the Geocoded Peacekeeping Operations (Geo-PKO) dataset. Journal of Peace Research, 57(2), 360–370.
##Work with the data
Our GitHub documentation provides a guide to working with Geo-PKO data in RStudio. Through this, you can produce your own visualisations.
[Explore our documentation on working with Geo-PKO data here.](http://)
geopko <- readr::read_csv("geopko2.csv", col_types = cols(.default="c"),
locale=readr::locale(encoding="latin1"))
geopko <- readr::read_csv("geopko2.csv", col_types = cols(.default="c"),
locale=readr::locale(encoding="latin1"))
geopko <- readr::read_csv("geopko2.csv", col_types = cols(.default="c"),
locale=readr::locale(encoding="latin1"))
iso <- read.csv("geopko_ccode2.csv")
geopko <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, Longitude, Latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
setwd("C:/Users/tanus/Documents/R/Geo-PKO-Shiny-v2.0")
options(shiny.usecairo=TRUE)
geopko <- readr::read_csv("geopko2.csv", col_types = cols(.default="c"),
locale=readr::locale(encoding="latin1"))
iso <- read.csv("geopko_ccode2.csv")
geopko <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, Longitude, Latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
tcc_df <- geopko %>% select(Source, Mission, Year, Month, No.troops, 52:85) %>%
group_by(Source, Mission, Year, Month) %>%
mutate(Total.troops=sum(No.troops, na.rm=T)) %>% ungroup()
cclist3 <- iso %>% select(Mission, a3) %>% distinct()
map_df <- geopko %>% unite(timepoint, c("Year","Month"), sep="-") %>%
mutate(timepoint=as.factor(timepoint))
Years <- geopko
Years <- Years %>% group_by(Mission, Location)%>% summarize(start_date=min(Year), end_date=max(Year))
ui <- fluidPage(
navbarPage("Exploring GeoPKO",
tabPanel("Map Generator",
sidebarLayout(
sidebarPanel(width=3,
p("Where are UN peacekeepers posted, and how many? Select the options below to visualize."),
selectInput(inputId="mission_map", label="Select a mission",
choices=factor(geopko$Mission), width=150),
selectInput("timepoint_map",
"Choose source's timepoint", choices=NULL),
checkboxInput(inputId="depsize_map",
"Deployment size", value=TRUE),
checkboxInput(inputId="MHQ_map",
"Mission HQ", value=FALSE),
checkboxInput(inputId="SHQ_map",
"Sector HQ", value=FALSE),
checkboxInput(inputId="MO_map",
"UNMO", value=FALSE),
checkboxInput(inputId="UNPOL_map",
"UNPOL", value=FALSE),
helpText("Errors may occur when a selected feature is not available for a map. Please deselect the option.")
),
mainPanel(fluid=TRUE,
plotOutput("depmap"),
span(h6(textOutput("basecountries"), align="center"))
))
),
tabPanel("Troop-Contributing Countries",
basicPage(
radioButtons(inputId="databy_tcc",
label="Present data by:",
choices=c("Deployment map", "Year"),
selected="Deployment map (default)"),
helpText("The GeoPKO dataset collects data by deployment maps published by the UN. For the best accuracy, display data by deployment maps. Data by year present the year's average troop counts and the highest number of TCCs."),
# span(h6(textOutput("tabletext", align="right"))),
DT::dataTableOutput("tcc_table")
)),
tabPanel ("Missions",
sidebarLayout(
sidebarPanel(
p("Which locations had peacekeepers deployed, and when? Select from the options below to visualise."),
selectInput(inputId="Lollipop_map", label="Select a mission",
choices=factor(Years$Mission), width=150), width= 3,
p("These graphs show the years in which a location had active deployment of peacekeepers, organised by mission.")
),
mainPanel(fluid=TRUE,
plotOutput("lollipop", height="auto")
)
)),
tabPanel ("Data",tags$div(
includeHTML("using-the-dataset.html")
)),
tabPanel ("About",tags$div(
includeHTML("about.html")
)))
)
server <- function(input, output, session){
#TCC tables
bymap_df <- reactive({
tcc_df %>%
pivot_longer(c(6:39), names_to=c(".value", "tcc_id"), names_sep="_")%>%
mutate(notroopspertcc=as.numeric(notroopspertcc)) %>%
filter(!is.na(nameoftcc)) %>%
select(-tcc_id) %>%
group_by(Source, Mission, Year, Month, Total.troops, nameoftcc)%>%
summarise(total.tcc=sum(notroopspertcc)) %>%
add_count(Source, name="No.TCC") %>%
mutate(overview=paste0(nameoftcc, "-", total.tcc)) %>%
select(-nameoftcc, -total.tcc) %>%
group_by(Source, Mission, Year, Month, Total.troops, No.TCC) %>%
summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(Year))})
byyear_df <- reactive({
tcc_df %>%
pivot_longer(c(6:39), names_to=c(".value", "TCC_id"), names_sep="_")%>%
mutate(notroopspertcc=as.numeric(notroopspertcc)) %>%
filter(!is.na(nameoftcc)) %>%
select(-TCC_id) %>%
group_by(Source, Mission, Year, Month, Total.troops, nameoftcc)%>%
summarise(total.each.tcc=sum(notroopspertcc)) %>%
add_count(Source, name="No.TCC") %>%
mutate(overview=paste0(nameoftcc, "-", total.each.tcc)) %>%
select(-nameoftcc, -total.each.tcc) %>%
group_by(Source, Mission, Year, Month, Total.troops, No.TCC) %>%
summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(Year)) %>%
group_by(Mission, Year) %>% mutate(min.troops= as.character(min(Total.troops)),
max.troops=as.character(max(Total.troops)),
ave.troops=as.character(round(mean(Total.troops)))) %>%
group_by(Mission, Year) %>% arrange(desc(No.TCC)) %>% dplyr::slice(1) %>%
mutate(ave.troops=ifelse(is.na(ave.troops), "Unknown", ave.troops),
min.troops=ifelse(is.na(min.troops), "Unknown", min.troops),
max.troops=ifelse(is.na(max.troops), "Unknown", max.troops)) %>%
select(Mission, Year, No.TCC, details, min.troops, max.troops, ave.troops)
})
# output$tabletext <- renderText({
#   req(input$databy_tcc)
#   if(input$databy_tcc=="Deployment map"){
#   paste("")
#   }
#   else if(input$databy_tcc=="Year"){
#   paste("Data collected")
#   }
# })
#
output$tcc_table <- DT::renderDataTable({
req(input$databy_tcc)
if(input$databy_tcc=="Deployment map"){
DT::datatable(bymap_df(),
colnames = c("Source map", "Mission", "Year", "Month",
"Total Troop Count", "Number of TCCs",
"Details"),
rownames = FALSE)
}
else if(input$databy_tcc=="Year"){
DT::datatable(byyear_df(),
colnames = c("Mission", "Year", "Number of TCCs", "Details",
"Min. Troop Count", "Max. Troop Count", "Mean Troop Count"),
rownames= FALSE)
}
})
#deployment maps
#update timepoint inputs based on filtering for mission
#creating list of sf objects to download
sfdf <- reactive({
req(input$mission_map)
cclist3 %>% filter(Mission %in% input$mission_map)
})
observeEvent(input$mission_map,{
updateSelectInput(session, 'timepoint_map',
choices = unique(map_df$timepoint[map_df$Mission==input$mission_map]))
})
map_df_temp <- reactive({
req(input$mission_map)
req(input$timepoint_map)
map_df %>% filter(Mission %in% input$mission_map) %>%
filter(timepoint %in% input$timepoint_map)
})
output$basecountries <- renderText({
countrieslist <- map_df_temp() %>% distinct(Country)
paste("This mission took place in",paste(unique(map_df_temp()$Country), collapse=", "),".")
})
UNMO_df_temp <- reactive({
map_df_temp() %>% filter(UNMO.dummy==1)
})
UNPOL_df_temp <- reactive({
map_df_temp() %>% filter(UNPOL.dummy==1)
})
SHQ_df_temp <- reactive({
map_df_temp() %>% filter(HQ==2)
})
output$depmap <- renderPlot({
input$depsize_map
input$MHQ_map
input$SHQ_map
input$MO_map
input$UNPOL_map
maplist <- pull(sfdf(), a3)
mapshapefiles <- gadm_sf_loadCountries(c(paste(maplist)), level=1)
p <- ggplot() + geom_sf(data=mapshapefiles$sf) +
theme_void() +
labs(title=paste(map_df_temp()$Mission,": ", map_df_temp()$timepoint),
caption="Sources: GeoPKO v1.2\n Shapefiles from GADM.")+
geom_blank()+
scale_shape_manual(values=c(3, 5, 23),
labels=c("SHQ"="Sector HQ", "UNMO"="Military Observers", "UNPOL"="UN Police"),
name="")
if(input$depsize_map){
p <- p + geom_point(data=map_df_temp(), aes(x=Longitude, y=Latitude, size=No.troops, color=as.factor(No.TCC)),
shape=20, alpha = 0.5)+
scale_size_continuous(name="Size of deployment",range=c(2, 20))+
scale_color_brewer(palette="Set1", name="Number of TCCs")+
guides(colour = guide_legend())}
if(input$MHQ_map){
p <- p +  geom_point(data=map_df_temp() %>% filter(HQ==3), aes(x=Longitude, y=Latitude, shape="HQ"),
shape=4, color="red", size=6)+
geom_label_repel(data=map_df_temp() %>% filter(HQ==3),
aes(x=Longitude, y=Latitude, label=paste0("Mission HQ: ",Location)
),
box.padding = 2,
size = 3,
fill = alpha(c("white"),0.7))}
if(input$SHQ_map){
if(length(SHQ_df_temp()$Location>1)){
p <- p +  geom_point(data=map_df_temp() %>% filter(HQ==2),
aes(x=Longitude, y= Latitude, shape="SHQ"), color="orange", size=5)}
else{
p <- p + labs(subtitle="Sector HQs not available. Please deselect the option.")}
}
if(input$MO_map){
if(length(UNMO_df_temp()$Location)>1){
p <- p +  geom_point(data=map_df_temp() %>% filter(UNMO.dummy==1),
aes(x=Longitude, y= Latitude, shape="UNMO"), color="darkgreen", size=3)}
else{
p <- p + labs(subtitle="UNMO not found. Please deselect the option.")}
}
if(input$UNPOL_map){
if(length(UNPOL_df_temp()$Location)>1){
p <- p +  geom_point(data=map_df_temp() %>% filter(UNPOL.dummy==1),
aes(x=Longitude, y= Latitude, shape="UNPOL"), color="darkblue", size=4)}
else{
p <- p + labs(subtitle="UNPOL not found. Please deselect the option.")}
}
p + theme(plot.subtitle = element_text(color="red"),
legend.text.align = 0)
p
})
sfdf2 <- reactive({
req(input$Lollipop_map)
Years %>% filter(Mission %in% input$Lollipop_map) %>%
mutate_at(vars(c(start_date, end_date)), as.numeric)
})
height_lollipop <-  reactive({
if(nrow(sfdf2())<15){400}
else{NROW(sfdf2())*25+300}
})
output$lollipop <- renderPlot({
lolli <-   ggplot(sfdf2()) +
geom_segment(aes(x=start_date, xend=end_date,
y=fct_reorder(Location, start_date),
yend=fct_reorder(Location, start_date)), color="grey") +
geom_point(aes(x=end_date, y=Location),
colour=rgb(0.9,0.3,0.1,0.9), size=3.5 ) +
geom_point(aes(x=start_date, y=Location),
colour=rgb(1.0,0.6,0.1,0.7), size=3) +
scale_x_continuous(breaks =
seq(1993,2020,1))+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=45, hjust=1),
axis.ticks.length.x= unit(0.1, "cm"),
panel.grid.minor.x = element_blank(),
panel.spacing.x = unit(1,"lines")
) +
xlab("Years") +
ylab("")+ #since the title already mentions locations, maybe it's selfexpl.?
labs(title=paste0(sfdf2()$Mission,": ", "Locations & durations"),
caption="Data: GeoPKO 2.0")
lolli
}, height=height_lollipop)
}
shinyApp(ui=ui, server=server)
