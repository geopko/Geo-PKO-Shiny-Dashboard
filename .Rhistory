runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
>>>>>>> NH_debug
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(geopko)
library(dplyr)
geopko %>% filter(mission =="MINUSMA") %>% distinct(timepoint)
geopko %>% filter(mission =="MINUSMA") %>% distinct(timepoint) %>% arrange()
geopko %>% filter(mission =="MINUSMA") %>% distinct(timepoint) %>% arrange(timepoint)
geopko %>% filter(mission =="MINUSMA") %>% distinct(joined_date)
library(zoo)
map_df <- geopko %>%
mutate_at(vars(c(
no.troops, no.tcc, longitude, latitude,
unmo.dummy, unpol.dummy
)), as.numeric) %>%
mutate(hq = as.factor(hq)) %>%
mutate(ordered_yrm =zoo::as.yearmon(timepoint, "%Y %B")) %>%
group_by(mission) %>%
arrange(ordered_yrm)
View(map_df)
shiny::runApp()
runApp()
runApp()
View(geopko)
View(geopko)
map_df %>%
filter(mission %in% input$anim_map) %>%
arrange(ordered_yrm)
runApp()
View(geopko)
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything, as.character)) %>%
pivot_longer(everything, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID)
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything, as.character)) %>%
pivot_longer(everything, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> test1
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything, as.character))
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
)
runApp()
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything, as.character)) %>%
pivot_longer(everything, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> test1
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(everything(), names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> test1
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(everything(), names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1)
runApp()
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> test1
View(test1)
geopko %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(binary != 1) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = "Data on troop types not available for this location") %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details2
View(details2)
runApp()
geopko %>% filter(mission=="MINUSMA") %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(binary != 1) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = "Data on troop types not available for this location") %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details2
View(details2)
geopko %>% filter(mission=="MINUSMA") %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> test1
View(test1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(details2)
View(test1)
View(details2)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
geopko %>% group_by(source) %>% filter(no.troops>0, no.tcc==0) %>% distinct(mission, source)
geopko %>% group_by(source) %>% filter(no.troops>0, no.tcc==0) %>% distinct(mission, source) -> debug1
View(debug1)
geopko %>% group_by(source) %>% filter(no.troops>0, no.tcc==0) %>% distinct(mission, source, month, year) -> debug1
geopko %>% group_by(source) %>% filter(max(no.troops)>0, max(no.tcc)==0) %>% distinct(mission, source, month, year) -> debug1
runApp()
runApp()
runApp()
runApp()
runApp()
geopko %>% filter(mission=="MINUSMA", year=="2019", month=="7")
geopko %>% filter(mission=="MINUSMA", year=="2019", month=="7") -> debug2
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", "),
.groups = 'drop') %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details1
View(debug2)
debug2 %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(!(troop.type %in% "0"))
debug2 %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no, troop.type
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(!(troop.type %in% "0"))
debug2 %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no, troop.type
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(!(troop.type %in% "0")) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", "),
.groups = 'drop') %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details1
View(details1)
debug2 %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(troop.type %in% "0") %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = "Data on troop types not available for this location",
.groups = 'drop') %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details2
debug2 %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no, troop.type
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(troop.type %in% "0") %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = "Data on troop types not available for this location",
.groups = 'drop') %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details2
View(details2)
View(details1)
runApp()
runApp()
library(shiny)
runApp()
rrunApp()
runApp()
View(debug2)
