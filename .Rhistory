runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
max(debug1$No.TCC, na.rm=TRUE)
max(debug1$No.TCC, na.rm=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
geopko <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, Longitude, Latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
tcc_df <- geopko %>% select(Source, Mission, Year, Month,
No.troops, nameoftcc_1:notroopspertcc_17) %>%
group_by(Source, Mission, Year, Month) %>%
mutate(Total.troops=sum(No.troops, na.rm=T)) %>% ungroup()
geopko <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, Longitude, Latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
tcc_df <- geopko %>% select(Source, Mission, Year, Month,
No.troops, nameoftcc_1:notroopspertcc_17) %>%
group_by(Source, Mission, Year, Month) %>%
mutate(Total.troops=sum(No.troops, na.rm=T)) %>% ungroup()
#appending ISO code to the dataset
ISO_df <- codelist %>% select(cown, iso3c) %>% mutate_all(as.character)
map_df <- left_join(geopko, ISO_df, by=c("cow_code"="cown"))
map_df <- map_df %>%
mutate(iso3c = case_when(Country == "Ethiopia/Eritrea" ~ "ETH, ERI",
Country == "Kosovo" ~ "XKO",
TRUE ~ as.character(iso3c)),
Month = as.numeric(Month),
MonthName = as.character(month(Month, label = TRUE, abbr = FALSE))) %>%
unite(joined_date, c("Year","MonthName"), sep=": ", remove=FALSE) %>%
unite(timepoint, c("Year","MonthName"), sep=" ", remove=FALSE)
str(map_df)
cclist3 <- map_df %>% select(Mission, iso3c) %>% distinct() #creating list of country codes for GADM sf files dowload
View(cclist3)
str(cclist3)
#oxford comma paste
country_list <-function(w, oxford=T) {
if(length(w)==1) return(paste("This mission was active in the following country or territory:",w));
if(length(w)==2) return(paste("This mission was active in the following countries or territories:", w[1],"and",w[2]));
paste0("This mission was active in the following countries or territories: ",paste(w[-length(w)], collapse=", "),
ifelse(oxford,",","")," and ", w[length(w)] )
}
cclist3 %>% filter(Mission %in% input$mission_map)
cclist3 %>% filter(Mission %in% "MINUSMA")
cclist3 %>% filter(Mission %in% "MONUC")
str(map_df)
map_df %>% tibble::rowid_to_column("ID") %>%
filter(Mission=="UNAVEM II") %>%
select(ID, Location, No.troops, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
pivot_longer(4:22, names_to="trooptypes", values_to="binary") %>%
filter(binary==1) %>%
mutate(trooptypes=ifelse(trooptypes=="Other.Type", "Others", trooptypes)) %>%
group_by(ID, Location, No.troops) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse=", ")) %>%
select(-ID) -> test
View(tcc_df)
View(test)
map_df %>% tibble::rowid_to_column("ID") %>%
filter(Mission=="MONUSCO") %>%
select(ID, Location, No.troops, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
pivot_longer(4:22, names_to="trooptypes", values_to="binary") %>%
filter(binary==1) %>%
mutate(trooptypes=ifelse(trooptypes=="Other.Type", "Others", trooptypes)) %>%
group_by(ID, Location, No.troops) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse=", ")) %>%
select(-ID) -> test
View(test)
map_df_temp() %>% tibble::rowid_to_column("ID") %>%
select(ID, Location, No.troops, No.TCC, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
mutate_at(vars(Infantry:Other.Type), as.numeric) %>%
rowwise(ID) %>%
mutate(typecheck_var=sum(c_across(Inf:Other.Type))) %>%
filter(typecheck_var >0)
map_df %>% tibble::rowid_to_column("ID") %>%
filter(Mission=="UNAVEM II") %>%
select(ID, Location, No.troops, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
pivot_longer(4:22, names_to="trooptypes", values_to="binary") %>%
filter(binary==1) %>%
mutate(trooptypes=ifelse(trooptypes=="Other.Type", "Others", trooptypes)) %>%
group_by(ID, Location, No.troops) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse=", ")) %>%
select(-ID) -> test
View(test)
map_df %>% filter(Mission== "UNAVEM II")
map_df %>% filter(Mission== "UNAVEM II") -> debug3
View(debug3)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
names(map_df)
map_df %>% tibble::rowid_to_column("ID") %>%
filter(Mission=="UNAMID") %>%
select(ID, Location, No.troops, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
pivot_longer(4:22, names_to="trooptypes", values_to="binary") %>%
filter(binary==1) %>%
mutate(trooptypes=ifelse(trooptypes=="Other.Type", "Others", trooptypes)) %>%
group_by(ID, Location, No.troops) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse=", ")) %>%
select(-ID) -> test
View(test)
map_df %>% tibble::rowid_to_column("ID") %>%
filter(Mission=="UNAMID") %>%
select(ID, Location, No.troops, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
mutate_at(vars(`Inf`:`Other.Type`), as.numeric) %>%
rowwise(ID) %>%
mutate(typecheck_var=sum(c_across(`Inf`:`Other.Type`))) %>%
filter(typecheck_var >0) -> test2
View(test2)
map_df %>% tibble::rowid_to_column("ID") %>%
filter(Mission=="UNAMID") %>%
select(ID, Location, No.troops, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
mutate_at(vars(`Inf`:`Other.Type`), as.numeric) %>%
rowwise(ID) %>%
mutate(typecheck_var=sum(c_across(`Inf`:`Other.Type`)))  -> test2
map_df %>% tibble::rowid_to_column("ID") %>%
filter(Source=="Map no. 4349") %>%
select(ID, Location, No.troops, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
mutate_at(vars(`Inf`:`Other.Type`), as.numeric) %>%
rowwise(ID) %>%
mutate(typecheck_var=sum(c_across(`Inf`:`Other.Type`)))  -> test2
runApp()
names(test2)
runApp()
runApp()
View(test)
View(test2)
map_df %>% tibble::rowid_to_column("ID") %>%
filter(Mission=="UNAMID") %>%
select(ID, Location, No.troops, No.TCC, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
pivot_longer(4:22, names_to="trooptypes", values_to="binary") %>%
filter(binary==1) %>%
mutate(trooptypes=ifelse(trooptypes=="Other.Type", "Others", trooptypes)) %>%
group_by(ID, Location, No.troops) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse=", ")) %>%
select(-ID) -> test
runApp()
map_df %>%  tibble::rowid_to_column("ID") %>%
select(ID, Location, No.troops, No.TCC, RPF:UAV, Other.Type, -RPF, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to="trooptypes", values_to="binary") %>%
filter(binary==1) %>%
mutate(trooptypes=ifelse(trooptypes=="Other.Type", "Others", trooptypes)) %>%
group_by(ID, Location, No.troops, No.TCC) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse=", ")) %>% ungroup() %>%
select(-ID) -> test
map_df %>% tibble::rowid_to_column("ID") %>%
filter(Source=="Map no. 4349") %>%
select(ID, Location, No.troops, No.TCC, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
mutate_at(vars(`Inf`:`Other.Type`), as.numeric) %>%
rowwise(ID) %>%
mutate(typecheck_var=sum(c_across(`Inf`:`Other.Type`)))  -> test2
names(test2)
map_df %>%  tibble::rowid_to_column("ID") %>%
select(ID, Location, No.troops, No.TCC, RPF:UAV, Other.Type, -RPF, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to="trooptypes", values_to="binary") %>%
filter(binary==1) %>%
mutate(trooptypes=ifelse(trooptypes=="Other.Type", "Others", trooptypes)) %>%
group_by(ID, Location, No.troops, No.TCC) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse=", ")) %>% ungroup() %>%
select(-ID) -> test
runApp()
runApp()
View(debug1)
debug1 %>% select(No.TCC) %>%  max()
debug1 %>% filter(No.TCC=max(No.TCC))
debug1 %>% filter(No.TCC==max(No.TCC))
debug1 %>% arrange(desc(No.TCC))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
profile()
library(lobstr)
install.packages("lobstr")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(output)
View(g)
Q
Q
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp(display.mode="showcase")
runApp()
runApp()
runApp()
geopko <- readxl::read_xlsx("Geo_PKO_v.2.0.xlsx", col_types="text")
geopko <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, Longitude, Latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
tcc_df <- geopko %>% select(Source, Mission, Year, Month,
No.troops, nameoftcc_1:notroopspertcc_17) %>%
group_by(Source, Mission, Year, Month) %>%
mutate(Total.troops=sum(No.troops, na.rm=T)) %>% ungroup()
#appending ISO code to the dataset
ISO_df <- codelist %>% select(cown, iso3c) %>% mutate_all(as.character)
map_df <- left_join(geopko, ISO_df, by=c("cow_code"="cown"))
map_df <- map_df %>%
mutate(iso3c = case_when(Country == "Ethiopia/Eritrea" ~ "ETH, ERI",
Country == "Kosovo" ~ "XKO",
TRUE ~ as.character(iso3c)),
Month = as.numeric(Month),
MonthName = as.character(month(Month, label = TRUE, abbr = FALSE))) %>%
unite(joined_date, c("Year","MonthName"), sep=": ", remove=FALSE) %>%
unite(timepoint, c("Year","MonthName"), sep=" ", remove=FALSE)
cclist3 <- map_df %>% select(Mission, iso3c) %>% distinct() #creating list of country codes for GADM sf files dowload
write.csv("Geo_PKO_v2.0_iso.csv", map_df)
write_csv("Geo_PKO_v2.0_iso.csv", map_df)
write.csv(map_df, "Geo_PKO_v2.0_iso.csv")
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
names(geopko)
names(map_df)
shiny::runApp()
runApp()
library(dplr)
library(dplyr)
library(stringr)
library(countrycode)
#appending ISO code to the dataset
ISO_df <- codelist %>% select(cown, iso3c) %>% mutate_all(as.character)
View(ISO_df)
map_df2 <- left_join(map_df, ISO_df, by=c("cow_code"="cown"))
map_df2 <- map_df2 %>%
mutate(iso3c = case_when(Country == "Ethiopia/Eritrea" ~ "ETH, ERI",
Country == "Kosovo" ~ "XKO",
TRUE ~ as.character(iso3c)),
Month = as.numeric(Month),
MonthName = as.character(month(Month, label = TRUE, abbr = FALSE))) %>%
unite(joined_date, c("Year","MonthName"), sep=": ", remove=FALSE) %>%
unite(timepoint, c("Year","MonthName"), sep=" ", remove=FALSE)
View(ISO_df)
names(map_df2)
geopko <- readr::read_csv("Geo_PKO_v2.csv", col_types = cols(.default="c"),
locale=readr::locale(encoding="latin1"))
map_df <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, Longitude, Latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
map_df <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, longitude, latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
#appending ISO code to the dataset
ISO_df <- codelist %>% select(cown, iso3c) %>% mutate_all(as.character)
map_df2 <- left_join(map_df, ISO_df, by=c("cow_code"="cown"))
map_df2 <- map_df2 %>%
mutate(iso3c = case_when(Country == "Ethiopia/Eritrea" ~ "ETH, ERI",
Country == "Kosovo" ~ "XKO",
TRUE ~ as.character(iso3c)),
Month = as.numeric(Month),
MonthName = as.character(month(Month, label = TRUE, abbr = FALSE))) %>%
unite(joined_date, c("Year","MonthName"), sep=": ", remove=FALSE) %>%
unite(timepoint, c("Year","MonthName"), sep=" ", remove=FALSE)
names(map_df)
map_df2 <- map_df2 %>%
mutate(iso3c = case_when(country == "Ethiopia/Eritrea" ~ "ETH, ERI",
country == "Kosovo" ~ "XKO",
TRUE ~ as.character(iso3c)),
month = as.numeric(month),
MonthName = as.character(month(month, label = TRUE, abbr = FALSE))) %>%
unite(joined_date, c("Year","MonthName"), sep=": ", remove=FALSE) %>%
unite(timepoint, c("Year","MonthName"), sep=" ", remove=FALSE)
map_df2 <- map_df2 %>%
mutate(iso3c = case_when(country == "Ethiopia/Eritrea" ~ "ETH, ERI",
country == "Kosovo" ~ "XKO",
TRUE ~ as.character(iso3c)),
month = as.numeric(month),
MonthName = as.character(month(month, label = TRUE, abbr = FALSE))) %>%
unite(joined_date, c("year","MonthName"), sep=": ", remove=FALSE) %>%
unite(timepoint, c("year","MonthName"), sep=" ", remove=FALSE)
View(map_df2)
?write.csv
write.csv(map_df2, "Geo_PKO_v2_ISO3.csv")
View(map_df2)
map_df2 %>% filter(Source == "Map no. 4349")
map_df2 %>% filter(Source == "Map no. 4349") -> test
View(test)
max(test$No.TCC)
runApp()
runApp()
View(map_df2)
runApp()
geopko <- readr::read_csv("Geo_PKO_v2_ISO3.csv", col_types = cols(.default="c"),
locale=readr::locale(encoding="latin1"))
map_df <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, longitude, latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
names(map_df)
str(map_df$joined_date)
runApp()
runApp()
runApp()
runApp()
View(map_df2)
runApp()
geopko <- readr::read_csv("Geo_PKO_v2.csv", col_types = cols(.default="c"),
locale=readr::locale(encoding="latin1"))
map_df <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, longitude, latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
#appending ISO code to the dataset
ISO_df <- codelist %>% select(cown, iso3c) %>% mutate_all(as.character)
map_df <- left_join(map_df, ISO_df, by=c("cow_code"="cown"))
map_df <- map_df %>%
mutate(iso3c = case_when(country == "Ethiopia/Eritrea" ~ "ETH, ERI",
country == "Kosovo" ~ "XKO",
TRUE ~ as.character(iso3c)),
month = as.numeric(month),
MonthName = as.character(month(month, label = TRUE, abbr = FALSE))) %>%
unite(joined_date, c("year","MonthName"), sep=": ", remove=FALSE) %>%
unite(timepoint, c("year","MonthName"), sep=" ", remove=FALSE)
write.csv(map_df2, "Geo_PKO_v2_ISO3.csv")
runApp()
runApp()
map_df2 %>% filter(Mission=="MINURCA") -> test
View(test)
map_df2 %>% filter(Mission=="MINURCA") -> test
map_df2 %>% filter(Mission=="MINURCA") -> test
View(test)
runApp()
runApp()
runApp()
geopko <- readr::read_csv("Geo_PKO_v2.csv", col_types = cols(.default="c"),
locale=readr::locale(encoding="latin1"))
map_df <- geopko %>%
mutate_at(vars(c(No.troops, No.TCC, longitude, latitude,
UNMO.dummy, UNPOL.dummy)), as.numeric) %>%
mutate(HQ=as.factor(HQ))
#appending ISO code to the dataset
ISO_df <- codelist %>% select(cown, iso3c) %>% mutate_all(as.character)
map_df <- left_join(map_df, ISO_df, by=c("cow_code"="cown"))
map_df <- map_df %>%
mutate(iso3c = case_when(country == "Ethiopia/Eritrea" ~ "ETH, ERI",
country == "Kosovo" ~ "XKO",
Mission == "UNFICYP" ~ "CYP, XNC",
TRUE ~ as.character(iso3c)),
month = as.numeric(month),
MonthName = as.character(month(month, label = TRUE, abbr = FALSE))) %>%
unite(joined_date, c("year","MonthName"), sep=": ", remove=FALSE) %>%
unite(timepoint, c("year","MonthName"), sep=" ", remove=FALSE)
write.csv(map_df2, "Geo_PKO_v2_ISO3.csv")
runApp()
length(test)
runApp()
runApp()
runApp()
runApp()
runApp()
950*^(1/2)
950^(1/2)
950^(1/3)
950^(1/4)
1380^(1/3)
test %>% pull(No.TCC)
test %>% pull(No.troops) %>%  ^1/3
test %>% pull(No.troops) -> test2
test2^1/3
test %>% pull(No.troops) %>%  `^`(1/3)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
test2 %>%  `^`(1/3) -> test3
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
testp <- ggplot() geom_point(data=test %>% slice(1),
aes(x=longitude, y=latitude, color=as.integer(No.TCC), size="Custom"),
shape=20, alpha = 0.8)
testp <- ggplot()+ geom_point(data=test %>% slice(1),
aes(x=longitude, y=latitude, color=as.integer(No.TCC), size="Custom"),
shape=20, alpha = 0.8)
testp
testp <- ggplot()+ geom_point(data=test %>% slice(1),
aes(x=longitude, y=latitude, color=as.integer(No.TCC), size="Custom"),
shape=20, alpha = 0.8)+
scale_size_manual(name="Size of deployment", values=c("Custom"=size_for_nrow1()))
test %>% pull(No.troops) %>%  slice(1) %>%  `^`(1/3)
test %>% pull(No.troops) %>%  slice(1) %>%  `^`(1/3) -> sizen
test %>% slice(1) pull(No.troops) %>%  `^`(1/3) -> sizen
test %>% slice(1) %>%  pull(No.troops) %>%  `^`(1/3) -> sizen
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
map_df2 %>% filter(Mission=="MINURSO") -> test
View(test)
runApp()
runApp()
runApp()
runApp()
test4 <- c(0, 0, 0, 0, 0)
max(test4)
runApp()
runApp()
runApp()
runApp()
View(test)
test %>%  filter(location == "Laayoune")
test %>%  filter(location == "Laayoune") -> test5
View(test5)
test %>%  tibble::rowid_to_column("ID") %>%
select(ID, location, No.troops, No.TCC, RPF:UAV, Other.Type, -RPF, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to="trooptypes", values_to="binary") %>%
filter(binary==1) %>%
mutate(trooptypes=ifelse(trooptypes=="Other.Type", "Others", trooptypes)) %>%
group_by(ID, location, No.troops, No.TCC) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse=", ")) %>% ungroup() %>%
select(-ID) -> testtable
test %>%  tibble::rowid_to_column("ID") %>%
select(ID, location, No.troops, No.TCC, RPF:UAV, Other.Type, -RPF_No,
-Inf_No, -FPU_No, -RES_No, -FP_No) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to="trooptypes", values_to="binary") %>%
filter(binary==1) %>%
mutate(trooptypes=case_when(trooptypes == "Other.Type" ~ "Others",
trooptypes == "SF" ~ "Special Forces",
trooptypes == "Inf" ~ "Infantry",
TRUE ~ as.character(trooptypes))) %>%
group_by(ID, location, No.troops, No.TCC) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse=", ")) %>% ungroup() %>%
mutate(No.TCC=ifelse(is.na(No.TCC), "Unknown", No.TCC)) %>%
select(-ID) -> testtable
View(testtable)
runApp()
runApp()
?max
runApp()
runApp()
