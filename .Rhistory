summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(year)) %>%
group_by(Mission, year) %>% mutate(min.troops= min(Total.troops),
max.troops=max(Total.troops),
ave.troops=mean(Total.troops))
View(output)
output <- tcc_df %>% filter(Mission=="MINUSMA") %>%
pivot_longer(c(7:34), names_to=c(".value", "TCC_id"), names_sep="_")%>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
select(-TCC_id, -No.TCC) %>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
group_by(Source, Mission, year, month, Total.troops, nameofTCC)%>%
summarise(total.tcc=sum(notroopsperTCC)) %>%
add_count(Source, name="No.TCC") %>%
mutate(overview=paste0(nameofTCC, "-", total.tcc)) %>%
select(-nameofTCC, -total.tcc) %>%
group_by(Source, Mission, year, month, Total.troops, No.TCC) %>%
summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(year)) %>%
group_by(Mission, year) %>% mutate(min.troops= min(Total.troops),
max.troops=max(Total.troops),
ave.troops=mean(Total.troops)) %>%
slice_head()
View(output)
output <- tcc_df %>% filter(Mission=="MINUSMA") %>%
pivot_longer(c(7:34), names_to=c(".value", "TCC_id"), names_sep="_")%>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
select(-TCC_id, -No.TCC) %>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
group_by(Source, Mission, year, month, Total.troops, nameofTCC)%>%
summarise(total.tcc=sum(notroopsperTCC)) %>%
add_count(Source, name="No.TCC") %>%
mutate(overview=paste0(nameofTCC, "-", total.tcc)) %>%
select(-nameofTCC, -total.tcc) %>%
group_by(Source, Mission, year, month, Total.troops, No.TCC) %>%
summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(year)) %>%
group_by(Mission, year) %>% mutate(min.troops= min(Total.troops),
max.troops=max(Total.troops),
ave.troops=mean(Total.troops)) %>%
group_by(year) %>% slice_head(n=1)
output <- tcc_df %>% filter(Mission=="MINUSMA") %>%
pivot_longer(c(7:34), names_to=c(".value", "TCC_id"), names_sep="_")%>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
select(-TCC_id, -No.TCC) %>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
group_by(Source, Mission, year, month, Total.troops, nameofTCC)%>%
summarise(total.tcc=sum(notroopsperTCC)) %>%
add_count(Source, name="No.TCC") %>%
mutate(overview=paste0(nameofTCC, "-", total.tcc)) %>%
select(-nameofTCC, -total.tcc) %>%
group_by(Source, Mission, year, month, Total.troops, No.TCC) %>%
summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(year)) %>%
group_by(Mission, year) %>% mutate(min.troops= min(Total.troops),
max.troops=max(Total.troops),
ave.troops=mean(Total.troops)) %>%
group_by(year) %>% slice_head()
install.packages("dplyr")
output <- tcc_df %>% filter(Mission=="MINUSMA") %>%
pivot_longer(c(7:34), names_to=c(".value", "TCC_id"), names_sep="_")%>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
select(-TCC_id, -No.TCC) %>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
group_by(Source, Mission, year, month, Total.troops, nameofTCC)%>%
summarise(total.tcc=sum(notroopsperTCC)) %>%
add_count(Source, name="No.TCC") %>%
mutate(overview=paste0(nameofTCC, "-", total.tcc)) %>%
select(-nameofTCC, -total.tcc) %>%
group_by(Source, Mission, year, month, Total.troops, No.TCC) %>%
summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(year)) %>%
group_by(Mission, year) %>% mutate(min.troops= min(Total.troops),
max.troops=max(Total.troops),
ave.troops=mean(Total.troops)) %>%
group_by(year) %>% slice_head()
library(dplyr)
output <- tcc_df %>% filter(Mission=="MINUSMA") %>%
pivot_longer(c(7:34), names_to=c(".value", "TCC_id"), names_sep="_")%>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
select(-TCC_id, -No.TCC) %>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
group_by(Source, Mission, year, month, Total.troops, nameofTCC)%>%
summarise(total.tcc=sum(notroopsperTCC)) %>%
add_count(Source, name="No.TCC") %>%
mutate(overview=paste0(nameofTCC, "-", total.tcc)) %>%
select(-nameofTCC, -total.tcc) %>%
group_by(Source, Mission, year, month, Total.troops, No.TCC) %>%
summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(year)) %>%
group_by(Mission, year) %>% mutate(min.troops= min(Total.troops),
max.troops=max(Total.troops),
ave.troops=mean(Total.troops)) %>%
group_by(year) %>% slice_head()
library(tidyr)
output <- tcc_df %>% filter(Mission=="MINUSMA") %>%
pivot_longer(c(7:34), names_to=c(".value", "TCC_id"), names_sep="_")%>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
select(-TCC_id, -No.TCC) %>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
group_by(Source, Mission, year, month, Total.troops, nameofTCC)%>%
summarise(total.tcc=sum(notroopsperTCC)) %>%
add_count(Source, name="No.TCC") %>%
mutate(overview=paste0(nameofTCC, "-", total.tcc)) %>%
select(-nameofTCC, -total.tcc) %>%
group_by(Source, Mission, year, month, Total.troops, No.TCC) %>%
summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(year)) %>%
group_by(Mission, year) %>% mutate(min.troops= min(Total.troops),
max.troops=max(Total.troops),
ave.troops=mean(Total.troops)) %>%
group_by(year) %>% slice_head()
library(stringr)
library(tidyverse)
output <- tcc_df %>% filter(Mission=="MINUSMA") %>%
pivot_longer(c(7:34), names_to=c(".value", "TCC_id"), names_sep="_")%>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
select(-TCC_id, -No.TCC) %>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
group_by(Source, Mission, year, month, Total.troops, nameofTCC)%>%
summarise(total.tcc=sum(notroopsperTCC)) %>%
add_count(Source, name="No.TCC") %>%
mutate(overview=paste0(nameofTCC, "-", total.tcc)) %>%
select(-nameofTCC, -total.tcc) %>%
group_by(Source, Mission, year, month, Total.troops, No.TCC) %>%
summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(year)) %>%
group_by(Mission, year) %>% mutate(min.troops= min(Total.troops),
max.troops=max(Total.troops),
ave.troops=mean(Total.troops)) %>%
group_by(year) %>% slice_head()
output <- tcc_df %>% filter(Mission=="MINUSMA") %>%
pivot_longer(c(7:34), names_to=c(".value", "TCC_id"), names_sep="_")%>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
select(-TCC_id, -No.TCC) %>%
mutate(notroopsperTCC=as.numeric(notroopsperTCC)) %>%
group_by(Source, Mission, year, month, Total.troops, nameofTCC)%>%
summarise(total.tcc=sum(notroopsperTCC)) %>%
add_count(Source, name="No.TCC") %>%
mutate(overview=paste0(nameofTCC, "-", total.tcc)) %>%
select(-nameofTCC, -total.tcc) %>%
group_by(Source, Mission, year, month, Total.troops, No.TCC) %>%
summarise(details=str_c(overview, collapse=", ")) %>%
arrange(desc(year)) %>%
group_by(Mission, year) %>% mutate(min.troops= min(Total.troops),
max.troops=max(Total.troops),
ave.troops=mean(Total.troops)) %>%
group_by(year) %>% dplyr::slice_head()
devtools::install_github("hadley/lazyeval")
devtools::install_github("hadley/dplyr")
devtools::install_github("hadley/dplyr")
remove.packages('ellipsis')
remove.packages(ellipsis)
shiny::runApp()
library(rsconnect)
deployApp()
deployApp()
shiny::runApp()
facetdf <- geopko %>% select(-starts_with(name.of.TCC), -start_with(No.troops.per.TCC))
View(geopko)
facetdf <- geopko %>% select(-starts_with("name.of.TCC"), -start_with("No.troops.per.TCC"))
library(dplyr)
library(tidyr)
facetdf <- geopko %>% select(-starts_with("name.of.TCC"), -start_with("No.troops.per.TCC"))
facetdf <- geopko %>% select(-starts_with("name.of.TCC"), -starts_with("No.troops.per.TCC"))
View(facetdf)
facetdf2 <- facetdf %>% group_by(Mission, year, location) %>% mutate(facet_ave=round(mean(No.troops)))
View(facetdf2)
facetdf <- geopko %>% select(-starts_with("name.of.TCC"), -starts_with("No.troops.per.TCC"))
facetdf2 <- facetdf %>% group_by(Mission, year, location) %>% mutate(facet_ave=round(mean(No.troops)))  %>%
arrange(month)
View(facetdf)
View(facetdf2)
facetdf2 <- facetdf %>% group_by(Mission, year, location) %>% mutate(facet_ave=round(mean(No.troops)))  %>%
group_by(Mission, year, location) %>%
arrange(month) %>%
slice(1)
View(facetdf2)
testfacet <- facetdf2 %>% filter(Mission=="UNOCI")
factor(testfacet$country)
map <- gadm_sf_loadCountries("CIV", level=1, basefile="./")
p2 <- ggplot() + geom_sf(data=map)
p2 <- ggplot() + geom_sf(data=map$sf)
p2
p2 <- ggplot() + geom_sf(data=map$sf) +
geom_point(data=testfacet, aes(x=longitude, y=latitude)) +
facet_grid(~ year)
p2
p2 <- ggplot() + geom_sf(data=map$sf) +
geom_point(data=testfacet, aes(x=longitude, y=latitude)) +
facet_wrap(~ year)
p2
p2 <- ggplot() + geom_sf(data=map$sf) +
geom_point(data=testfacet, aes(x=longitude, y=latitude)) +
facet_wrap(~ year) +
theme_void()
p2
runApp()
runApp()
runApp()
runApp()
runApp()
library(foreign)
install.packages("foreign")
install.packages("foreign")
if(!require(foreign)) install.packages("foreign", repos = "https://svn.r-project.org/")
setwd("~/DPCR/GeoPKO/GeoPKO-Shiny/GeoPKODashboard")
deployApp()
library(rsconnect)
deployApp()
library(rsconnect)
deployApp()
library(rsconnect)
deployApp()
install.packages("foreign")
remove.packages("foreign")
install.packages("foreign")
install.packages("foreign")
library(installr)
install.packages("installr")
library(installr)
updateR()
updateR()
library(rsconnect)
deployApp()
ip <- as.data.frame(installed.packages(lib.loc = .libPaths()[1]),
stringsAsFactors = FALSE)
head(ip)
str(ip)
path.lib <- unique(ip$LibPath)
# create a vector with all the names of the packages you want to remove
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
str(pkgs.to.remove)
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
sapply(pkgs.to.remove, install.packages, lib = path.lib)
install.packages("shiny")
shiny::runApp()
install.packages("readr")
install.packages('leaflet')
install.packages('readxl')
runApp()
install.packages("shinythemes", repos = "http://cran.us.r-project.org")
install.packages('DT')
shiny::runApp()
library(rsconnect)
install.packages('rsconnect')
rsconnect::setAccountInfo(name='nguyentha', token='BFCEA562FBE3927127266D9F46155791', secret='PKzlDOD7HLoWOK+qcGFegQasVEPcrPZXr6T/tkVj')
library(rsconnect)
rsconnect::setAccountInfo(name='nguyentha', token='BFCEA562FBE3927127266D9F46155791', secret='PKzlDOD7HLoWOK+qcGFegQasVEPcrPZXr6T/tkVj')
deployApp()
install.packages(c("kableExtra", "fs", "haven", "highr", "forcats", "countrycode")
install.packages(c("kableExtra", "fs", "haven", "highr", "forcats", "countrycode"))
install.packages(c("kableExtra", "fs", "haven", "highr", "forcats", "countrycode"))
install.packages("broom")
install.packages("blog")
install.packages("blob")
runApp()
install.packages("shinythemes", repos = "http://cran.us.r-project.org")
shiny::runApp()
runApp()
install.packages('lubridate')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
geopko %>% mutate(across(starts_with(nameoftcc)), as.character)
View(geopko)
geopko %>% mutate(across(starts_with(name.of.tcc)), as.character)
rlang::last_error()
geopko %>% mutate(across(starts_with("name.of.tcc")), as.character)
geopko %>% mutate(across(starts_with("name.of.tcc")), ~as.character)
geopko %>% mutate(across(starts_with("name.of.tcc"), as.character))
shiny::runApp()
runApp()
runApp()
Years <- geopko
Years <- Years %>% group_by(Mission, Location)%>% summarize(start_date=min(Year), end_date=max(Year))
View(Years)
geopko <- read_csv("geopko2.csv", col_types = cols(.default="c"))
iso <- read.csv("geopko_ccode2.csv")
geopko <- geopko %>%
mutate(No.troops=as.numeric(No.troops),
No.TCC=as.numeric(No.TCC),
Longitude=as.numeric(Longitude),
Latitude=as.numeric(Latitude),
UNMO.dummy=as.numeric(UNMO.dummy),
UNPOL.dummy=as.numeric(UNPOL.dummy),
HQ=as.factor(HQ))
tcc_df <- geopko %>% select(Source, Mission, Year, Month, No.troops, 52:85) %>%
group_by(Source, Mission, Year, Month) %>%
mutate(Total.troops=sum(No.troops, na.rm=T)) %>% ungroup()
Years <- geopko
Years <- Years %>% group_by(Mission, Location)%>% summarize(start_date=min(Year), end_date=max(Year))
View(Years)
sfdf2 <- Years %>% filter(Mission=="UNOCI")
lolli <-   ggplot(sfdf2) +
geom_segment(aes(x=start_date, xend=end_date, y=fct_reorder(Location, start_date), yend=fct_reorder(Location, start_date)), color="grey") +
geom_point(aes(x=end_date, y=Location),
colour=rgb(0.9,0.3,0.1,0.9), size=3.5 ) +
geom_point(aes(x=start_date, y=Location),
colour=rgb(1.0,0.6,0.1,0.7), size=3) +
scale_x_continuous(breaks =
c(1993:2000))+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=90, hjust=1),
axis.ticks.length.x= unit(0.1, "cm"),
panel.grid.minor.x = element_blank(),
panel.spacing.x = unit(1,"lines")
) +
xlab("Years") +
ylab("Location")+
labs(title=paste("Ocupation of Locations in", sfdf2()$Mission),
caption="Data from GeoPKO 2.0")
sfdf2 <- Years %>% filter(Mission=="UNOCI")
lolli <-   ggplot(sfdf2) +
geom_segment(aes(x=start_date, xend=end_date, y=fct_reorder(Location, start_date), yend=fct_reorder(Location, start_date)), color="grey") +
geom_point(aes(x=end_date, y=Location),
colour=rgb(0.9,0.3,0.1,0.9), size=3.5 ) +
geom_point(aes(x=start_date, y=Location),
colour=rgb(1.0,0.6,0.1,0.7), size=3) +
scale_x_continuous(breaks =
c(1993:2000))+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=90, hjust=1),
axis.ticks.length.x= unit(0.1, "cm"),
panel.grid.minor.x = element_blank(),
panel.spacing.x = unit(1,"lines")
) +
xlab("Years") +
ylab("Location")+
labs(title=paste("Ocupation of Locations in", sfdf2()$Mission),
caption="Data from GeoPKO 2.0")
lolli
sfdf2 <- Years %>% filter(Mission=="UNOCI")
lolli <-   ggplot(sfdf2) +
geom_segment(aes(x=start_date, xend=end_date, y=fct_reorder(Location, start_date), yend=fct_reorder(Location, start_date)), color="grey") +
geom_point(aes(x=end_date, y=Location),
colour=rgb(0.9,0.3,0.1,0.9), size=3.5 ) +
geom_point(aes(x=start_date, y=Location),
colour=rgb(1.0,0.6,0.1,0.7), size=3) +
scale_x_continuous(breaks =
c(1993:2000))+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=90, hjust=1),
axis.ticks.length.x= unit(0.1, "cm"),
panel.grid.minor.x = element_blank(),
panel.spacing.x = unit(1,"lines")
) +
xlab("Years") +
ylab("Location")+
labs(title=paste("Ocupation of Locations in", sfdf2()$Mission),
caption="Data from GeoPKO 2.0")
lolli <-   ggplot(sfdf2) +
geom_segment(aes(x=start_date, xend=end_date, y=fct_reorder(Location, start_date), yend=fct_reorder(Location, start_date)), color="grey") +
geom_point(aes(x=end_date, y=Location),
colour=rgb(0.9,0.3,0.1,0.9), size=3.5 ) +
geom_point(aes(x=start_date, y=Location),
colour=rgb(1.0,0.6,0.1,0.7), size=3) +
scale_x_continuous(breaks =
c(1993:2000))+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=90, hjust=1),
axis.ticks.length.x= unit(0.1, "cm"),
panel.grid.minor.x = element_blank(),
panel.spacing.x = unit(1,"lines")
) +
xlab("Years") +
ylab("Location")+
labs(title=paste("Ocupation of Locations in", sfdf2$Mission),
caption="Data from GeoPKO 2.0")
lolli
lolli <-   ggplot(sfdf2) +
geom_segment(aes(x=start_date, xend=end_date, y=fct_reorder(Location, start_date), yend=fct_reorder(Location, start_date)), color="grey") +
geom_point(aes(x=end_date, y=Location),
colour=rgb(0.9,0.3,0.1,0.9), size=3.5 ) +
geom_point(aes(x=start_date, y=Location),
colour=rgb(1.0,0.6,0.1,0.7), size=3) +
scale_x_discrete(breaks =
c(1993:2000))+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=90, hjust=1),
axis.ticks.length.x= unit(0.1, "cm"),
panel.grid.minor.x = element_blank(),
panel.spacing.x = unit(1,"lines")
) +
xlab("Years") +
ylab("Location")+
labs(title=paste("Ocupation of Locations in", sfdf2$Mission),
caption="Data from GeoPKO 2.0")
lolli
lolli <-   ggplot(sfdf2) +
geom_segment(aes(x=start_date, xend=end_date, y=fct_reorder(Location, start_date), yend=fct_reorder(Location, start_date)), color="grey") +
geom_point(aes(x=end_date, y=Location),
colour=rgb(0.9,0.3,0.1,0.9), size=3.5 ) +
geom_point(aes(x=start_date, y=Location),
colour=rgb(1.0,0.6,0.1,0.7), size=3) +
scale_x_discrete(breaks =
c(1993:2000))+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=90, hjust=1),
axis.ticks.length.x= unit(0.1, "cm"),
panel.grid.minor.x = element_blank(),
panel.spacing.x = unit(1,"lines")
) +
xlab("Years") +
ylab("Location")+
labs(title=paste("Occupation of Locations in", sfdf2$Mission),
caption="Data from GeoPKO 2.0")
ggsave("lolli.png", plot=lolli)
runApp()
runApp()
install.packages("plotly")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(sfdf2)
sfdf2 <- Years %>% filter(Mission=="MINUGUA")
View(sfdf2)
View(sfdf2)
View(sfdf2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
lolli <-   ggplot(sfdf2) +
geom_segment(aes(x=start_date, xend=end_date, y=fct_reorder(Location, start_date), yend=fct_reorder(Location, start_date)), color="grey") +
geom_point(aes(x=as.numeric(end_date), y=Location),
colour=rgb(0.9,0.3,0.1,0.9), size=3.5 ) +
geom_point(aes(x=as.numeric(start_date), y=Location),
colour=rgb(1.0,0.6,0.1,0.7), size=3) +
scale_x_continuous(breaks =
c(1993:2000))+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=90, hjust=1),
axis.ticks.length.x= unit(0.1, "cm"),
panel.grid.minor.x = element_blank(),
panel.spacing.x = unit(1,"lines")
) +
xlab("Years") +
ylab("Location")+
labs(title=paste("Occupation of Locations in", sfdf2$Mission),
caption="Data from GeoPKO 2.0")
lolli
sfdf2 <- Years %>% filter(Mission=="MINUGUA") %>%
mutate_at(vars(c(start_date, end_date)), as.numeric)
lolli <-   ggplot(sfdf2) +
geom_segment(aes(x=start_date, xend=end_date, y=fct_reorder(Location, start_date), yend=fct_reorder(Location, start_date)), color="grey") +
geom_point(aes(x=as.numeric(end_date), y=Location),
colour=rgb(0.9,0.3,0.1,0.9), size=3.5 ) +
geom_point(aes(x=as.numeric(start_date), y=Location),
colour=rgb(1.0,0.6,0.1,0.7), size=3) +
scale_x_continuous(breaks =
c(1993:2000))+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(angle=90, hjust=1),
axis.ticks.length.x= unit(0.1, "cm"),
panel.grid.minor.x = element_blank(),
panel.spacing.x = unit(1,"lines")
) +
xlab("Years") +
ylab("Location")+
labs(title=paste("Occupation of Locations in", sfdf2$Mission),
caption="Data from GeoPKO 2.0")
lolli
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('ShinyTwotabs.R')
